---
title: "Model4_DataWrangling"
format: html
editor: visual
---

# CDC Disability Data Cleaning and Wrangling

## Prevalence of Disability Status and Types by Demographic Groups, 2020

**Data originally acquired at:**

[DHDS - Prevalence of Disability Status and Types by Demographic Groups, 2020 \| Data \| Centers for Disease Control and Prevention (cdc.gov)](https://data.cdc.gov/Disability-Health/DHDS-Prevalence-of-Disability-Status-and-Types-by-/qjg3-6acf)

**Brief Description:**

Disability and Health Data System (DHDS) is an online source of state-level data on adults with disabilities. Users can access information on six functional disability types: cognitive (serious difficulty concentrating, remembering or making decisions), hearing (serious difficulty hearing or deaf), mobility (serious difficulty walking or climbing stairs), vision (serious difficulty seeing), self-care (difficulty dressing or bathing) and independent living (difficulty doing errands alone).

## Importing and Cleaning Data

Upload raw data to R and install/load packages required to clean data.

```{r}
#always open it has a project!

#install.packages(dslabs)
#install.packages(tidyverse)
#install.packages(here)
library(tidyverse)
library(dslabs)
library(here)

##here command to construct a path the that file. Never make a hard path to the C drive, only relative paths.

#import file
raw <- read_csv(here('dataanalysis_exercise/data/rawDHDSdata.csv'))

```

Look at what we have and make a tibble data frame.

```{r}
str(raw)
summary(raw)
as.tibble(raw)
```

Wrangler data of interest. Goal is to have \~5 variables. Most interesting in this case would be: LocationDesc, Response (Age/Ethnicity/Veteran Status; will have to be split), WeightedNumber (An adjusted version of the crude number of respondents that reflects the number of persons with the attribute in the population.), Stratification 1 (which type of disability)

Now we'll put this data out:

```{r}
disdata <- raw %>%
select(LocationAbbr, Response, WeightedNumber, Stratification1)

str(disdata)

as.tibble(disdata)
```

Lets now look at veterans vs non-veterans. We'll pull out veterans then remove the "regions" from the data so there are only easily identifiable state abbreviations.

```{r}
vetdata <- disdata %>%
  filter(Response == 'Veteran' | Response == 'Non-Veteran') %>%
  filter(Stratification1 != 'No Disability') %>%
  filter(LocationAbbr != 'HHS1') %>%
   filter(LocationAbbr != 'HHS2') %>%
   filter(LocationAbbr != 'HHS3') %>%
   filter(LocationAbbr != 'HHS4') %>%
   filter(LocationAbbr != 'HHS5') %>%
   filter(LocationAbbr != 'HHS6') %>%
   filter(LocationAbbr != 'HHS7') %>%
   filter(LocationAbbr != 'HHS8') %>%
   filter(LocationAbbr != 'HHS9') %>%
   filter(LocationAbbr != 'HHS10')

tibble(vetdata)
```

There are some gaps in the data now. Lets find them and remove them.

```{r}
vetdata2 <- drop_na(vetdata)

as_factor(vetdata2$Stratification1)
as_factor(vetdata2$LocationAbbr)
as_factor(vetdata2$Response)

tibble(vetdata2)
```

Now that the data is cleaner we can make sum graphs and perform some simple statistics.

(Possible directions of interest include "Does veteran status predispose to a certain disability", "Are certain disabilities more common in specific states", etc.)

To be continued.....

##This section added by Vijay Panthayi (Wrangling and Exploring the Data)

First, we are going to save the cleaned data into an Rds file

```{r}
#saving the cleaned data as an rds file
#it appears that vetdata2 is the final, clean data 
vetdata2 %>% saveRDS(here::here("vetdata2.rds"))
```

Next, we are going to load the Rds file which previously was made of the cleaned data. Loading the data under "vetdata_clean".

```{r}
#loading the vetdata2.rds file
vetdata_clean <- readRDS(here("vetdata2.rds"))
glimpse(vetdata_clean)
```

Now that we have loaded the cleaned data, we can explore the previously mentioned interest of "Does veteran status predispose to a certain disability?".

To do this, we will first grab all the data where the response is "veteran" and then create a bar graph with each stratification to visually see which disability correlates most with being a veteran according to the data.

```{r}
#create a subset data set of only the observations where the Response variable was "Veteran"
vetdata_clean_veteran <- subset(vetdata_clean, vetdata_clean$Response == "Veteran")
glimpse (vetdata_clean_veteran)

#create a bar graph of the different disabilities
counts <- table(vetdata_clean_veteran$Stratification1)
par(mar = c(5,4,4,2) + 0.1)
barplot(counts, main = "Disability Distribution Among Veterans", xlab = "Disability Type", 
                  ylab = "Count", col=rainbow(20), las=2, ylim = c(0,60))

#confirm the number of bars equals the number of unique entries for "Stratification1" variable
unique(vetdata_clean_veteran$Stratification1)
```

It appears that Any and Mobility disabilities are about equivalent at count as the highest. Self-Care disability appears to be the lowest.
